pipeline: 
  python_build: 
    commands: 
      - "pip install coverage" #can be mentioned in requirements.txt
      - "pip install pytest" #can be mentioned in requirements.txt
      #- "pip install -r requirements.txt"
      - "coverage run --source=example-py-pytest/com/automationpanda/example example-py-pytest/tests/test*.py"
      - "coverage xml"
    image: frolvlad/alpine-python3
  restore-sonar-cache:
    # This step should be before sonar analysis step
    image: drillster/drone-volume-cache
    restore: true
    ttl: 7 # Refresh the cache in every 7 days
    mount:
      - ./dotsonar/cache
    volumes:
      - /tmp/cache:/cache
    when:
      event: [pull_request, push]  
  sonar_analysis: 
    debug: true
    host: "https://engci-sonar-sjc.cisco.com/sonar"
    #image: containers.cisco.com/servicescf-devops/drone-sonar:pythonTest
    image: containers.cisco.com/servicescf-devops/drone-sonar #test gradle SA findbugs
    key: com.cisco.services:testKey
    language: py
    project_name: python-ut-codecoverage
    profile: py-default-2017
    #python_coverage_reportPath: coverage.xml
    pull: true
    secrets: 
      - sonar_login
    when: 
      event: 
        - pull_request
        - push
  rebuild-sonar-cache:
     # This step should be after sonar analysis step
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - ./dotsonar/cache
    volumes:
      - /tmp/cache:/cache
    when:
      event: [pull_request, push]      

